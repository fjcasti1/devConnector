{"version":3,"sources":["components/layout/spinner.gif","actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","actions/profile.js","components/layout/Spinner.js","components/dashboard/DashboardActions.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/profile-forms/ProfileForm.js","components/profile-forms/AddExperience.js","components/profile-forms/AddEducation.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileRepos.js","components/profile/Profile.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentItem.js","components/post/CommentForm.js","components/post/Post.js","components/layout/Alert.js","components/routing/PrivateRoute.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","App.js","index.js"],"names":["module","exports","setAlert","msg","alertType","timeout","dispatch","id","uuidv4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","connect","state","auth","logout","isAuthenticated","loading","authLinks","to","className","onClick","href","guestLinks","register","name","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","placeholder","login","getCurrentProfile","statusText","status","Spinner","src","spinner","style","width","margin","display","alt","DashboardActions","delExperience","expID","delete","experienceArr","experiences","map","exp","key","_id","company","title","format","from","delEducation","eduID","educationArr","educations","edu","school","degree","profile","delAccount","window","confirm","user","useEffect","experience","education","initialState","website","location","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","createProfile","history","edit","push","displaySocialInputs","toggleSocialInputs","profileData","social","Array","isArray","join","current","description","addExperience","put","checked","disabled","cols","rows","fieldofstudy","addEducation","ProfileItem","avatar","slice","skill","index","getProfiles","profiles","length","ProfileTop","rel","ProfileAbout","trim","split","ProfileExperience","ProfileEducation","repos","getGithubRepos","username","repo","html_url","stargazers_count","watchers_count","forks_count","getProfileById","userId","match","params","PostItem","userID","text","date","likes","comments","addLike","removeLike","deletePost","showActions","defaultProps","postID","addPost","setText","getPosts","posts","removeComment","commentID","comment","addComment","getPost","alerts","alert","Component","component","rest","render","props","getItem","combineReducers","action","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","Landing","Register","Login","Profiles","Profile","Dashboard","ProfileForm","AddExperience","AddEducation","Posts","Post","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3608a6a2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.c09926ed.gif\";","import { SET_ALERT, REMOVE_ALERT } from './types';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const setAlert = (msg, alertType, timeout = 5000) => (dispatch) => {\n  const id = uuidv4(); // Random ID\n  dispatch({\n    type: SET_ALERT,\n    payload: { msg, alertType, id },\n  });\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\n};\n","export const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\nexport const GET_PROFILE = 'GET_PROFILE';\nexport const GET_PROFILES = 'GET_PROFILES';\nexport const GET_REPOS = 'GET_REPOS';\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\nexport const CREATE_PROFILE = 'CREATE_PROFILE';\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\nexport const DELETE_ACCOUNT = 'DELETE_ACCOUNT';\nexport const GET_POSTS = 'GET_POSTS';\nexport const GET_POST = 'GET_POST';\nexport const POST_ERROR = 'POST_ERROR';\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\nexport const DELETE_POST = 'DELETE_POST';\nexport const ADD_POST = 'ADD_POST';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';\n","import axios from 'axios';\n\nconst setAuthToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common['x-auth-token'] = token;\n  } else {\n    delete axios.defaults.headers.common['x-auth-token'];\n  }\n};\n\nexport default setAuthToken;\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGOUT,\n  CLEAR_PROFILE,\n} from './types';\nimport axios from 'axios';\nimport { setAlert } from './alert';\nimport setAuthToken from '../utils/setAuthToken';\n\n// Register User\nexport const register = ({ name, email, password }) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const body = JSON.stringify({ name, email, password });\n  try {\n    const res = await axios.post('/api/users', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => {\n        dispatch(setAlert(error.msg, 'danger', 3000));\n      });\n    }\n\n    dispatch({\n      type: REGISTER_FAIL,\n    });\n  }\n};\n\n// Login User\nexport const login = ({ email, password }) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const body = JSON.stringify({ email, password });\n  try {\n    const res = await axios.post('/api/auth', body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => {\n        dispatch(setAlert(error.msg, 'danger', 3000));\n      });\n    }\n\n    dispatch({\n      type: LOGIN_FAIL,\n    });\n  }\n};\n\n// Load User\nexport const loadUser = () => async (dispatch) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  try {\n    const res = await axios.get('/api/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR,\n    });\n  }\n};\n\n// Logout\nexport const logout = () => (dispatch) => {\n  dispatch({ type: CLEAR_PROFILE });\n  dispatch({ type: LOGOUT });\n};\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logout } from '../../actions/auth';\n\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\n  const authLinks = (\n    <ul>\n      <li>\n        <Link to='/profiles'>\n          <span>Developers</span>\n        </Link>\n      </li>\n      <li>\n        <Link to='/posts'>\n          <span>Posts</span>\n        </Link>\n      </li>\n      <li>\n        <Link to='/dashboard'>\n          <i className='fas fa-user'></i>\n          <span className='hide-sm'> Dashboard</span>\n        </Link>\n      </li>\n      <li>\n        <a onClick={logout} href='#!'>\n          <i className='fas fa-sign-out-alt'></i>\n          <span className='hide-sm'> Logout</span>\n        </a>\n      </li>\n    </ul>\n  );\n\n  const guestLinks = (\n    <ul>\n      <li>\n        <Link to='/profiles'>\n          <span>Developers</span>\n        </Link>\n      </li>\n      <li>\n        <Link to='/register'>Register</Link>\n      </li>\n      <li>\n        <Link to='/login'>Login</Link>\n      </li>\n    </ul>\n  );\n\n  return (\n    <nav className='navbar bg-dark'>\n      <h1>\n        <Link to='/'>\n          <i className='fas fa-code'></i> DevConnector\n        </Link>\n      </h1>\n      {!loading && <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>}\n    </nav>\n  );\n};\n\nNavbar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { logout })(Navbar);\n","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst Landing = ({ isAuthenticated }) => {\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n  return (\n    <section className='landing'>\n      <div className='dark-overlay'>\n        <div className='landing-inner'>\n          <h1 className='x-large'>Developer Connector</h1>\n          <p className='lead'>\n            Create a developer profile/portfolio, share posts and get help from other\n            developers\n          </p>\n          <div className='buttons'>\n            <Link to='/register' className='btn btn-primary'>\n              Sign Up\n            </Link>\n            <Link to='/login' className='btn btn-light'>\n              Login\n            </Link>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nLanding.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: '',\n  });\n\n  const { name, email, password, password2 } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (password !== password2) {\n      setAlert('Password do not match', 'danger', 3000);\n    } else {\n      register({ name, email, password });\n    }\n  };\n\n  // Redirect if successful registration\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Sign Up</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Create Your Account\n      </p>\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Name'\n            name='name'\n            value={name}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='email'\n            placeholder='Email Address'\n            name='email'\n            value={email}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            This site uses Gravatar so if you want a profile image, use a Gravatar\n            email\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Password'\n            name='password'\n            value={password}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Confirm Password'\n            name='password2'\n            value={password2}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <input type='submit' className='btn btn-primary' value='Register' />\n      </form>\n      <p className='my-1'>\n        Already have an account? <Link to='/login'>Sign In</Link>\n      </p>\n    </Fragment>\n  );\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { setAlert, register })(Register);\n","import React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth';\n\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n\n  const { email, password } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    login({ email, password });\n  };\n\n  // Redirect if logged in\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Sign In</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Sign Into Your Account\n      </p>\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\n        <div className='form-group'>\n          <input\n            type='email'\n            placeholder='Email Address'\n            name='email'\n            value={email}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Password'\n            name='password'\n            value={password}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <input type='submit' className='btn btn-primary' value='LogIn' />\n      </form>\n      <p className='my-1'>\n        Don't have an account? <Link to='/register'>Sign Up</Link>\n      </p>\n    </Fragment>\n  );\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  GET_PROFILE,\n  GET_PROFILES,\n  GET_REPOS,\n  PROFILE_ERROR,\n  CREATE_PROFILE,\n  UPDATE_PROFILE,\n  CLEAR_PROFILE,\n  DELETE_ACCOUNT,\n} from './types';\n\n// Get current users profile\nexport const getCurrentProfile = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/api/profile/me');\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Get all profiles\nexport const getProfiles = () => async (dispatch) => {\n  dispatch({ type: CLEAR_PROFILE });\n  try {\n    const res = await axios.get('/api/profile');\n\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Get profile by user ID\nexport const getProfileById = (userId) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/profile/user/${userId}`);\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Get Github repos\nexport const getGithubRepos = (username) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/profile/github/${username}`);\n\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Create or update profile\nexport const createProfile = (formData, history, edit = false) => async (\n  dispatch,\n) => {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n    };\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({\n      type: CREATE_PROFILE,\n      payload: res.data,\n    });\n    dispatch(setAlert(edit ? 'Profile updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => {\n        dispatch(setAlert(error.msg, 'danger', 3000));\n      });\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add Experience\nexport const addExperience = (formData, history) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    const res = await axios.put('/api/profile/experience', formData, config);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n    dispatch(setAlert('Experience Added', 'success'));\n\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => {\n        dispatch(setAlert(error.msg, 'danger', 3000));\n      });\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add Education\nexport const addEducation = (formData, history) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    const res = await axios.put('/api/profile/education', formData, config);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n    dispatch(setAlert('Education Added', 'success'));\n\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => {\n        dispatch(setAlert(error.msg, 'danger', 3000));\n      });\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete Experience\nexport const delExperience = (expID) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/${expID}`);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n    dispatch(setAlert('Experience Removed '));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete Education\nexport const delEducation = (eduID) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/api/profile/education/${eduID}`);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n    dispatch(setAlert('Education Removed '));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete profile & account\nexport const delAccount = () => async (dispatch) => {\n  if (window.confirm('Are you sure? This can NOT be undone')) {\n    try {\n      await axios.delete('/api/profile/'); // Deletes from DB\n\n      dispatch({ type: CLEAR_PROFILE }); // Deletes profile from state\n      dispatch({ type: DELETE_ACCOUNT }); // Deletes user from state\n      dispatch(setAlert('Your account has been permanently deleted', '', 5000));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status },\n      });\n    }\n  }\n};\n","import React, { Fragment } from 'react';\nimport spinner from './spinner.gif';\n\nconst Spinner = () => (\n  <Fragment>\n    <img\n      src={spinner}\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\n      alt='loading...'\n    />\n  </Fragment>\n);\n\nexport default Spinner;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst DashboardActions = () => {\n  return (\n    <div className='dash-buttons'>\n      <Link to='/edit-profile' className='btn btn-light'>\n        <i className='fas fa-user-circle text-primary'></i> Edit Profile\n      </Link>\n      <Link to='/add-experience' className='btn btn-light'>\n        <i className='fab fa-black-tie text-primary'></i> Add Experience\n      </Link>\n      <Link to='/add-education' className='btn btn-light'>\n        <i className='fas fa-graduation-cap text-primary'></i> Add Education\n      </Link>\n    </div>\n  );\n};\n\nexport default DashboardActions;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport { delExperience } from '../../actions/profile';\n\nconst Experience = ({ experienceArr, delExperience }) => {\n  const experiences = experienceArr.map((exp) => (\n    <tr key={exp._id}>\n      <td>{exp.company}</td>\n      <td className='hide-sm'>{exp.title}</td>\n      <td>\n        <Moment format='YYYY/MM/DD'>{exp.from}</Moment> -{' '}\n        {exp.to === null ? 'Now' : <Moment format='YYYY/MM/DD'>{exp.to}</Moment>}\n      </td>\n      <td>\n        <button className='btn btn-danger' onClick={() => delExperience(exp._id)}>\n          Delete\n        </button>\n      </td>\n    </tr>\n  ));\n\n  return (\n    <Fragment>\n      <h2 className='my-2'>Experience Credentials</h2>\n      <table className='table'>\n        <thead>\n          <tr>\n            <th>Company</th>\n            <th className='hide-sm'>Title</th>\n            <th className='hide-sm'>Years</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>{experiences}</tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nExperience.propTypes = {\n  experienceArr: PropTypes.array.isRequired,\n  delExperience: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { delExperience })(Experience);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport { delEducation } from '../../actions/profile';\n\nconst Education = ({ educationArr, delEducation }) => {\n  const educations = educationArr.map((edu) => (\n    <tr key={edu._id}>\n      <td>{edu.school}</td>\n      <td className='hide-sm'>{edu.degree}</td>\n      <td>\n        <Moment format='YYYY/MM/DD'>{edu.from}</Moment> -{' '}\n        {edu.to === null ? 'Now' : <Moment format='YYYY/MM/DD'>{edu.to}</Moment>}\n      </td>\n      <td>\n        <button className='btn btn-danger' onClick={() => delEducation(edu._id)}>\n          Delete\n        </button>\n      </td>\n    </tr>\n  ));\n\n  return (\n    <Fragment>\n      <h2 className='my-2'>Education Credentials</h2>\n      <table className='table'>\n        <thead>\n          <tr>\n            <th>School</th>\n            <th className='hide-sm'>Degree</th>\n            <th className='hide-sm'>Years</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>{educations}</tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nEducation.propTypes = {\n  educationArr: PropTypes.array.isRequired,\n  delEducation: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { delEducation })(Education);\n","import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { delAccount, getCurrentProfile } from '../../actions/profile';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layout/Spinner';\nimport DashboardActions from './DashboardActions';\nimport Experience from './Experience';\nimport Education from './Education';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  delAccount,\n  auth: { user },\n  profile: { profile, loading },\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n    // eslint-disable-next-line\n  }, []);\n  return loading && profile == null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <h1 className='large text-primary'>Dashboard</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Welcome {user && user.name}\n      </p>\n      {profile !== null ? (\n        <Fragment>\n          <DashboardActions />\n          <Experience experienceArr={profile.experience} />\n          <Education educationArr={profile.education} />\n        </Fragment>\n      ) : (\n        <Fragment>\n          <p>You have not yet setup a profile, please add some info</p>\n          <Link to='/create-profile' className='btn btn-primary my-1'>\n            Create a profile\n          </Link>\n        </Fragment>\n      )}\n      <div className='my-2'>\n        <button className='btn btn-danger' onClick={() => delAccount()}>\n          <i className='fas fa-user-minus'></i> Delete My Account\n        </button>\n      </div>\n    </Fragment>\n  );\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  delAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile, delAccount })(\n  Dashboard,\n);\n","import React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\nimport { Link } from 'react-router-dom';\n\nconst initialState = {\n  company: '',\n  website: '',\n  location: '',\n  status: '',\n  skills: '',\n  githubusername: '',\n  bio: '',\n  twitter: '',\n  facebook: '',\n  linkedin: '',\n  youtube: '',\n  instagram: '',\n};\n\nconst ProfileForm = ({\n  profile: { profile, loading },\n  history,\n  createProfile,\n  getCurrentProfile,\n}) => {\n  const [formData, setFormData] = useState(initialState);\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  useEffect(() => {\n    if (!profile) getCurrentProfile();\n    // eslint-disable-next-line\n    if (!loading && profile) {\n      const profileData = { ...initialState };\n      for (const key in profile) {\n        if (key in profileData) profileData[key] = profile[key];\n      }\n      for (const key in profile.social) {\n        if (key in profileData) profileData[key] = profile.social[key];\n      }\n      if (Array.isArray(profileData.skills))\n        profileData.skills = profileData.skills.join(', ');\n      setFormData(profileData);\n    }\n  }, [loading, getCurrentProfile, profile]);\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData;\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    createProfile(formData, history, profile ? true : false);\n  };\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Create Your Profile</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={onSubmit}>\n        <div className='form-group'>\n          <select name='status' value={status} onChange={onChange}>\n            <option>* Select Professional Status</option>\n            <option value='Developer'>Developer</option>\n            <option value='Junior Developer'>Junior Developer</option>\n            <option value='Senior Developer'>Senior Developer</option>\n            <option value='Manager'>Manager</option>\n            <option value='Student or Learning'>Student or Learning</option>\n            <option value='Instructor'>Instructor or Teacher</option>\n            <option value='Intern'>Intern</option>\n            <option value='Other'>Other</option>\n          </select>\n          <small className='form-text'>\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Company'\n            name='company'\n            value={company}\n            onChange={onChange}\n          />\n          <small className='form-text'>\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Website'\n            name='website'\n            value={website}\n            onChange={onChange}\n          />\n          <small className='form-text'>Could be your own or a company website</small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={onChange}\n          />\n          <small className='form-text'>\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Skills'\n            name='skills'\n            value={skills}\n            onChange={onChange}\n          />\n          <small className='form-text'>\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Github Username'\n            name='githubusername'\n            value={githubusername}\n            onChange={onChange}\n          />\n          <small className='form-text'>\n            If you want your latest repos and a Github link, include your username\n          </small>\n        </div>\n        <div className='form-group'>\n          <textarea\n            placeholder='A short bio of yourself'\n            name='bio'\n            value={bio}\n            onChange={onChange}\n          ></textarea>\n          <small className='form-text'>Tell us a little about yourself</small>\n        </div>\n\n        <div className='my-2'>\n          <button\n            type='button'\n            className='btn btn-light'\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n        {displaySocialInputs && (\n          <Fragment>\n            <div className='form-group social-input'>\n              <i className='fab fa-twitter fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Twitter URL'\n                name='twitter'\n                value={twitter}\n                onChange={onChange}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-facebook fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Facebook URL'\n                name='facebook'\n                value={facebook}\n                onChange={onChange}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-youtube fa-2x'></i>\n              <input\n                type='text'\n                placeholder='YouTube URL'\n                name='youtube'\n                value={youtube}\n                onChange={onChange}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-linkedin fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Linkedin URL'\n                name='linkedin'\n                value={linkedin}\n                onChange={onChange}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-instagram fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Instagram URL'\n                name='instagram'\n                value={instagram}\n                onChange={onChange}\n              />\n            </div>\n          </Fragment>\n        )}\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link to='/dashboard' className='btn btn-light my-1' href='dashboard.html'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nProfileForm.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n  ProfileForm,\n);\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addExperience } from '../../actions/profile';\nimport { Link } from 'react-router-dom';\n\nconst initialState = {\n  title: '',\n  company: '',\n  location: '',\n  from: '',\n  to: '',\n  current: false,\n  description: '',\n};\n\nexport const AddExperience = ({ addExperience, history }) => {\n  const [formData, setFormData] = useState(initialState);\n\n  const { title, company, location, from, to, current, description } = formData;\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    addExperience(formData, history);\n  };\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Add An Experience</h1>\n      <p className='lead'>\n        <i className='fas fa-code-branch'></i> Add any developer/programming\n        positions that you have had in the past\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={onSubmit}>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Job Title'\n            name='title'\n            value={title}\n            onChange={onChange}\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Company'\n            name='company'\n            value={company}\n            onChange={onChange}\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={onChange}\n          />\n        </div>\n        <div className='form-group'>\n          <h4>From Date</h4>\n          <input type='date' name='from' value={from} onChange={onChange} />\n        </div>\n        <div className='form-group'>\n          <p>\n            <input\n              type='checkbox'\n              name='current'\n              value={current}\n              checked={current}\n              onChange={() => setFormData({ ...formData, current: !current })}\n            />{' '}\n            Current Job\n          </p>\n        </div>\n        <div className='form-group'>\n          <h4>To Date</h4>\n          <input\n            type='date'\n            name='to'\n            value={to}\n            onChange={onChange}\n            disabled={current}\n          />\n        </div>\n        <div className='form-group'>\n          <textarea\n            name='description'\n            cols='30'\n            rows='5'\n            placeholder='Job Description'\n            value={description}\n            onChange={onChange}\n          ></textarea>\n        </div>\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nAddExperience.propTypes = {\n  addExperience: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addExperience })(AddExperience);\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addEducation } from '../../actions/profile';\nimport { Link } from 'react-router-dom';\n\nconst initialState = {\n  school: '',\n  degree: '',\n  fieldofstudy: '',\n  from: '',\n  to: '',\n  current: false,\n  description: '',\n};\n\nexport const AddEducation = ({ addEducation, history }) => {\n  const [formData, setFormData] = useState(initialState);\n\n  const { school, degree, fieldofstudy, from, to, current, description } = formData;\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    addEducation(formData, history);\n  };\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Add Your Education</h1>\n      <p className='lead'>\n        <i className='fas fa-graduation-cap'></i> Add any school, bootcamp, etc that\n        you have attended\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={onSubmit}>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* School or Bootcamp'\n            name='school'\n            value={school}\n            onChange={onChange}\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Degree or Certificate'\n            name='degree'\n            value={degree}\n            onChange={onChange}\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Field Of Study'\n            name='fieldofstudy'\n            value={fieldofstudy}\n            onChange={onChange}\n          />\n        </div>\n        <div className='form-group'>\n          <h4>From Date</h4>\n          <input type='date' name='from' value={from} onChange={onChange} />\n        </div>\n        <div className='form-group'>\n          <p>\n            <input\n              type='checkbox'\n              name='current'\n              value={current}\n              onChange={() => setFormData({ ...formData, current: !current })}\n              checked={current}\n            />{' '}\n            Current School or Bootcamp\n          </p>\n        </div>\n        <div className='form-group'>\n          <h4>To Date</h4>\n          <input\n            type='date'\n            name='to'\n            value={to}\n            onChange={onChange}\n            disabled={current}\n          />\n        </div>\n        <div className='form-group'>\n          <textarea\n            name='description'\n            cols='30'\n            rows='5'\n            placeholder='Program Description'\n            value={description}\n            onChange={onChange}\n          ></textarea>\n        </div>\n        <input type='submit' className='btn btn-primary my-1' value='Submit' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nAddEducation.propTypes = {\n  addEducation: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addEducation })(AddEducation);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst ProfileItem = ({\n  profile: {\n    user: { _id, name, avatar },\n    status,\n    company,\n    location,\n    skills,\n  },\n}) => {\n  return (\n    <div className='profile bg-light'>\n      <img className='round-img' src={avatar} alt='' />\n      <div>\n        <h2>{name}</h2>\n        <p>\n          {status}\n          {company && <span> at {company}</span>}\n        </p>\n        {location && <p className='my-1'>{location}</p>}\n        <Link to={`/profile/${_id}`} className='btn btn-primary'>\n          View Profile\n        </Link>\n      </div>\n      <ul>\n        {skills.slice(0, 4).map((skill, index) => (\n          <li key={index} className='text-primary'>\n            <i className='fas fa-check'></i> {skill}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nProfileItem.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileItem;\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getProfiles } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\nimport ProfileItem from './ProfileItem';\n\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\n  useEffect(() => {\n    getProfiles();\n  }, [getProfiles]);\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <h1 className='large text-primary'>Developers</h1>\n          <p className='lead'>\n            <i className='fab fa-connectdevelop'></i> Browse and connect with\n            developers\n          </p>\n          <div className='profiles'>\n            {profiles.length > 0 ? (\n              profiles.map((profile) => (\n                <ProfileItem key={profile._id} profile={profile} />\n              ))\n            ) : (\n              <h4>No profiles found</h4>\n            )}\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nProfiles.propTypes = {\n  profile: PropTypes.object.isRequired,\n  getProfiles: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProfileTop = ({\n  profile: {\n    status,\n    company,\n    location,\n    website,\n    social,\n    user: { name, avatar },\n  },\n}) => {\n  return (\n    <Fragment>\n      <div className='profile-top bg-primary p-2'>\n        <img className='round-img my-1' src={avatar} alt='' />\n        <h1 className='large'>{name}</h1>\n        <p className='lead'>\n          {status} {company && <span>at {company}</span>}\n        </p>\n        <p>{location && <span>{location}</span>}</p>\n\n        <div className='icons my-1'>\n          {website && (\n            <a href={website} target='_blank' rel='noopener noreferrer'>\n              <i className='fas fa-globe fa-2x'></i>\n            </a>\n          )}\n          {social && social.twitter && (\n            <a href={social.twitter} target='_blank' rel='noopener noreferrer'>\n              <i className='fab fa-twitter fa-2x'></i>\n            </a>\n          )}\n          {social && social.facebook && (\n            <a href={social.facebook} target='_blank' rel='noopener noreferrer'>\n              <i className='fab fa-facebook fa-2x'></i>\n            </a>\n          )}\n          {social && social.linkedin && (\n            <a href={social.linkedin} target='_blank' rel='noopener noreferrer'>\n              <i className='fab fa-linkedin fa-2x'></i>\n            </a>\n          )}\n          {social && social.youtube && (\n            <a href={social.youtube} target='_blank' rel='noopener noreferrer'>\n              <i className='fab fa-youtube fa-2x'></i>\n            </a>\n          )}\n          {social && social.instagram && (\n            <a href={social.instagram} target='_blank' rel='noopener noreferrer'>\n              <i className='fab fa-instagram fa-2x'></i>\n            </a>\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nProfileTop.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileTop;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProfileAbout = ({\n  profile: {\n    bio,\n    skills,\n    user: { name },\n  },\n}) => (\n  <div className='profile-about bg-light p-2'>\n    {bio && (\n      <Fragment>\n        <h2 className='text-primary'>{name.trim().split(' ')[0]}'s Bio</h2>\n        <p>{bio}</p>\n        <div className='line'></div>\n      </Fragment>\n    )}\n    {skills.length > 0 && (\n      <Fragment>\n        <h2 className='text-primary'>Skill Set</h2>\n        <div className='skills'>\n          {skills.map((skill, index) => (\n            <div key={index} className='p-1'>\n              <i className='fa fa-check'></i> {skill}\n            </div>\n          ))}\n        </div>\n      </Fragment>\n    )}\n  </div>\n);\n\nProfileAbout.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileAbout;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\n\nconst ProfileExperience = ({ profile: { experience } }) => (\n  <Fragment>\n    <div className='profile-exp bg-white p-2'>\n      <h2 className='text-primary'>Experience</h2>\n      {experience.length > 0 ? (\n        experience.map((exp, index) => (\n          <div key={index}>\n            <h3 className='text-dark'>{exp.company}</h3>\n            <p>\n              <Moment format='YYYY/MM/DD'>{exp.from}</Moment> -{' '}\n              {!exp.to ? 'Current' : <Moment format='YYYY/MM/DD'>{exp.to}</Moment>}\n            </p>\n            <p>\n              <strong>Position: </strong>\n              {exp.title}\n            </p>\n            <p>\n              <strong>Description: </strong>\n              {exp.description}\n            </p>\n          </div>\n        ))\n      ) : (\n        <h3 className='text-dark'>No Experience Credentials</h3>\n      )}\n    </div>\n  </Fragment>\n);\n\nProfileExperience.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileExperience;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\n\nconst ProfileEducation = ({ profile: { education } }) => (\n  <Fragment>\n    <div className='profile-edu bg-white p-2'>\n      <h2 className='text-primary'>Education</h2>\n      {education.length > 0 ? (\n        education.map((edu, index) => (\n          <div key={index}>\n            <h3>{edu.school}</h3>\n            <p>\n              <Moment format='YYYY/MM/DD'>{edu.from}</Moment> -{' '}\n              {!edu.to ? 'Current' : <Moment format='YYYY/MM/DD'>{edu.to}</Moment>}\n            </p>\n            <p>\n              <strong>Degree: </strong>\n              {edu.degree}\n            </p>\n            <p>\n              <strong>Field Of Study: </strong>\n              {edu.fieldofstudy}\n            </p>\n            <p>\n              <strong>Description: </strong>\n              {edu.description}\n            </p>\n          </div>\n        ))\n      ) : (\n        <h3 className='text-dark'>No Education Credentials</h3>\n      )}\n    </div>\n  </Fragment>\n);\n\nProfileEducation.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileEducation;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getGithubRepos } from '../../actions/profile';\nimport Spinner from '../../components/layout/Spinner';\n\nconst ProfileRepos = ({ username, getGithubRepos, repos }) => {\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos, username]);\n\n  return (\n    <div className='profile-github'>\n      <h2 className='text-primary my-1'>\n        <i className='fab fa-github'></i> Github Repos\n      </h2>\n      {repos === null ? (\n        <Spinner />\n      ) : (\n        repos.map((repo) => (\n          <div key={repo.id} className='repo bg-white p-1 my-1'>\n            <div>\n              <h4>\n                <a href={repo.html_url} target='_blank' rel='noopener noreferrer'>\n                  {repo.name}\n                </a>\n              </h4>\n              {repo.description && <p>{repo.description}</p>}\n            </div>\n            <div>\n              <ul>\n                <li className='badge badge-primary'>\n                  Stars: {repo.stargazers_count}\n                </li>\n                <li className='badge badge-dark'>Watchers: {repo.watchers_count}</li>\n                <li className='badge badge-light'>Forks: {repo.forks_count}</li>\n              </ul>\n            </div>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nProfileRepos.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired,\n  repos: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  repos: state.profile.repos,\n});\n\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileRepos);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getProfileById } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\nimport { Link } from 'react-router-dom';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\nimport ProfileRepos from './ProfileRepos';\n\nconst Profile = ({ match, getProfileById, profile: { profile, loading }, auth }) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n\n  return (\n    <Fragment>\n      {profile == null || loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <Link to='/profiles' className='btn btn-light'>\n            Back to Profiles\n          </Link>\n          {auth.isAuthenticated &&\n            !auth.loading &&\n            auth.user._id === profile.user._id && (\n              <Link to='/edit-profile' className='btn btn-dark'>\n                Edit Profile\n              </Link>\n            )}\n          <div className='profile-grid my-1'>\n            <ProfileTop profile={profile} />\n            <ProfileAbout profile={profile} />\n            <ProfileExperience profile={profile} />\n            <ProfileEducation profile={profile} />\n            {profile.githubusername && (\n              <ProfileRepos username={profile.githubusername} />\n            )}\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\n\nconst PostItem = ({\n  userID, //Logged in user\n  post: { _id, loading, name, avatar, text, date, likes, comments, user }, // Post user\n  addLike,\n  removeLike,\n  deletePost,\n  showActions,\n}) => {\n  return (\n    <div className='post bg-white p-1 my-1'>\n      <div>\n        <Link to={`profile/${user}`}>\n          <img className='round-img' src={avatar} alt='' />\n          <h4>{name}</h4>\n        </Link>\n      </div>\n      <div>\n        <p className='my-1'>{text}</p>\n        <p className='post-date'>\n          Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n        </p>\n        {showActions && (\n          <Fragment>\n            <button\n              type='button'\n              className='btn btn-light'\n              onClick={() => addLike(_id)}\n            >\n              <i className='fas fa-thumbs-up' />{' '}\n              {likes.length > 0 && <span>{likes.length}</span>}\n            </button>\n            <button\n              type='button'\n              className='btn btn-light'\n              onClick={() => removeLike(_id)}\n            >\n              <i className='fas fa-thumbs-down' />\n            </button>\n            <Link to={`/posts/${_id}`} className='btn btn-primary'>\n              Discussion{' '}\n              {comments.length > 0 && (\n                <span className='comment-count'>{comments.length}</span>\n              )}\n            </Link>\n            {!loading && user === userID && (\n              <button\n                type='button'\n                className='btn btn-danger'\n                onClick={() => deletePost(_id)}\n              >\n                <i className='fas fa-times'></i>\n              </button>\n            )}\n          </Fragment>\n        )}\n      </div>\n    </div>\n  );\n};\n\nPostItem.defaultProps = {\n  showActions: true,\n};\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  userID: PropTypes.string.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  userID: state.auth.user._id, // Logged in user Id\n});\n\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\n  PostItem,\n);\n","import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  GET_POSTS,\n  GET_POST,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n} from './types';\n\n// Get posts\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Get post\nexport const getPost = (postID) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/posts/${postID}`);\n    dispatch({\n      type: GET_POST,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add Like\nexport const addLike = (postID) => async (dispatch) => {\n  try {\n    const res = await axios.put(`/api/posts/like/${postID}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { postID, likes: res.data },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Remove Like\nexport const removeLike = (postID) => async (dispatch) => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${postID}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { postID, likes: res.data },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete Post\nexport const deletePost = (postID) => async (dispatch) => {\n  try {\n    await axios.delete(`/api/posts/${postID}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: postID,\n    });\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add Post\nexport const addPost = (formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  try {\n    const res = await axios.post('/api/posts/', formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data,\n    });\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add Comment\nexport const addComment = (postID, formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  try {\n    const res = await axios.post(`/api/posts/comment/${postID}`, formData, config);\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data,\n    });\n    dispatch(setAlert('Comment Posted', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Remove Comment\nexport const removeComment = (postID, commentID) => async (dispatch) => {\n  try {\n    await axios.delete(`/api/posts/comment/${postID}/${commentID}`);\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentID,\n    });\n    dispatch(setAlert('Comment Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addPost } from '../../actions/post';\n\nconst PostForm = ({ addPost }) => {\n  const [text, setText] = useState('');\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    addPost({ text });\n    setText('');\n  };\n\n  return (\n    <div className='post-form'>\n      <div className='bg-primary p'>\n        <h3>Say Something...</h3>\n      </div>\n      <form className='form my-1' onSubmit={onSubmit}>\n        <textarea\n          name='text'\n          value={text}\n          cols='30'\n          rows='5'\n          placeholder='Create a post'\n          onChange={(e) => {\n            setText(e.target.value);\n          }}\n        ></textarea>\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\n      </form>\n    </div>\n  );\n};\n\nPostForm.propTypes = {\n  addPost: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addPost })(PostForm);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getPosts } from '../../actions/post';\nimport Spinner from '../layout/Spinner';\nimport PostItem from './PostItem';\nimport PostForm from './PostForm';\n\nconst Post = ({ post: { posts, loading }, getPosts }) => {\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n  return loading ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <h1 className='large text-primary'>Posts</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Welcome to the community!\n      </p>\n      <PostForm />\n      <div className='posts'>\n        {posts.map((post) => (\n          <PostItem key={post._id} post={post} />\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n\nPost.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post,\n});\n\nexport default connect(mapStateToProps, { getPosts })(Post);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { removeComment } from '../../actions/post';\n\nconst CommentItem = ({\n  comment: { _id, user, text, name, avatar, date },\n  postID,\n  auth,\n  removeComment,\n}) => {\n  return (\n    <div className='post bg-white p-1 my-1'>\n      <div>\n        <Link to={`/profile/${user}`}>\n          <img className='round-img' src={avatar} alt='' />\n          <h4>{name}</h4>\n        </Link>\n      </div>\n      <div>\n        <p className='my-1'>{text}</p>\n        <p className='post-date'>\n          Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\n        </p>\n        {!auth.loading && user === auth.user._id && (\n          <button\n            type='button'\n            className='btn btn-danger'\n            onClick={() => removeComment(postID, _id)}\n          >\n            Delete Comment\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nCommentItem.propTypes = {\n  comment: PropTypes.object.isRequired,\n  postID: PropTypes.string.isRequired,\n  auth: PropTypes.object.isRequired,\n  removeComment: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { removeComment })(CommentItem);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { addComment } from '../../actions/post';\nimport { connect } from 'react-redux';\n\nconst CommentForm = ({ postID, addComment }) => {\n  const [text, setText] = useState('');\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    addComment(postID, { text });\n    setText('');\n  };\n\n  return (\n    <div className='post-form'>\n      <div className='bg-primary p'>\n        <h3>Leave A Comment</h3>\n      </div>\n      <form className='form my-1' onSubmit={onSubmit}>\n        <textarea\n          name='text'\n          value={text}\n          cols='30'\n          rows='5'\n          placeholder='Comment on this post'\n          onChange={(e) => setText(e.target.value)}\n        ></textarea>\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\n      </form>\n    </div>\n  );\n};\n\nCommentForm.propTypes = {\n  addComment: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addComment })(CommentForm);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport CommentItem from './CommentItem';\nimport CommentForm from './CommentForm';\nimport { getPost } from '../../actions/post';\nimport PostItem from '../posts/PostItem';\nimport Spinner from '../layout/Spinner';\nimport { Link } from 'react-router-dom';\n\nconst Post = ({ match, getPost, post: { post, loading } }) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost, match]);\n\n  return loading || post === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <Link to='/posts' className='btn'>\n        Back To Posts\n      </Link>\n      <PostItem post={post} showActions={false} />\n      <CommentForm postID={match.params.id} />\n\n      <div className='comments'>\n        {post.comments.map((comment, index) => (\n          <CommentItem key={index} comment={comment} postID={post._id} />\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post,\n});\n\nexport default connect(mapStateToProps, { getPost })(Post);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst Alert = ({ alerts }) =>\n  alerts !== null &&\n  alerts.length > 0 &&\n  alerts.map((alert) => (\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n      {alert.msg}\n    </div>\n  ));\n\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  alerts: state.alert,\n});\n\nexport default connect(mapStateToProps)(Alert);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: { isAuthenticated, loading },\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      !isAuthenticated && !loading ? (\n        <Redirect to='/login' />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== payload);\n\n    default:\n      return state;\n  }\n}\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGOUT,\n  DELETE_ACCOUNT,\n} from '../actions/types';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n\n    case REGISTER_FAIL:\n    case LOGIN_FAIL:\n    case AUTH_ERROR:\n    case LOGOUT:\n    case DELETE_ACCOUNT:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n      };\n\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_PROFILE,\n  GET_PROFILES,\n  GET_REPOS,\n  CLEAR_PROFILE,\n  PROFILE_ERROR,\n  CREATE_PROFILE,\n  UPDATE_PROFILE,\n} from '../actions/types';\n\nconst initialState = {\n  profile: null,\n  profiles: [],\n  repos: [],\n  loading: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case GET_PROFILE:\n    case CREATE_PROFILE:\n    case UPDATE_PROFILE:\n      return {\n        ...state,\n        profile: payload,\n        loading: false,\n        error: {},\n      };\n    case GET_PROFILES:\n      return {\n        ...state,\n        profiles: payload,\n        loading: false,\n        error: {},\n      };\n    case GET_REPOS:\n      return {\n        ...state,\n        repos: payload,\n        loading: false,\n      };\n    case PROFILE_ERROR:\n      return {\n        ...state,\n        profile: null,\n        error: payload,\n        loading: false,\n      };\n    case CLEAR_PROFILE:\n      return {\n        ...state,\n        profile: null,\n        repos: [],\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_POSTS,\n  GET_POST,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n} from '../actions/types';\n\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false,\n        error: {},\n      };\n    case GET_POST:\n      return {\n        ...state,\n        post: payload,\n        loading: false,\n        error: {},\n      };\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        post: null,\n        loading: false,\n      };\n    case UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map((post) =>\n          post._id === payload.postID\n            ? {\n                ...post,\n                likes: payload.likes,\n              }\n            : post,\n        ),\n        loading: false,\n        error: {},\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => post._id !== payload),\n        loading: false,\n        error: {},\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [payload, ...state.posts],\n        loading: false,\n        error: {},\n      };\n    case ADD_COMMENT:\n      return {\n        ...state,\n        post: { ...state.post, comments: payload },\n        loading: false,\n        error: {},\n      };\n    case REMOVE_COMMENT:\n      return {\n        ...state,\n        post: {\n          ...state.post,\n          comments: state.post.comments.filter((comment) => comment._id !== payload),\n        },\n        loading: false,\n        error: {},\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport alert from './alert';\nimport auth from './auth';\nimport profile from './profile';\nimport post from './post';\n\nexport default combineReducers({ alert, auth, profile, post });\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware)),\n);\n\nexport default store;\n","import React, { Fragment, useEffect } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProfileForm from './components/profile-forms/ProfileForm';\nimport AddExperience from './components/profile-forms/AddExperience';\nimport AddEducation from './components/profile-forms/AddEducation';\nimport Profiles from './components/profiles/Profiles';\nimport Profile from './components/profile/Profile';\nimport Posts from './components/posts/Posts';\nimport Post from './components/post/Post';\nimport Alert from './components/layout/Alert';\nimport PrivateRoute from './components/routing/PrivateRoute';\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Route exact path='/' component={Landing} />\n          <section className='container'>\n            <Alert />\n            <Switch>\n              <Route exact path='/register' component={Register} />\n              <Route exact path='/login' component={Login} />\n              <Route exact path='/profiles' component={Profiles} />\n              <Route exact path='/profile/:id' component={Profile} />\n              <PrivateRoute exact path='/dashboard' component={Dashboard} />\n              <PrivateRoute exact path='/create-profile' component={ProfileForm} />\n              <PrivateRoute exact path='/edit-profile' component={ProfileForm} />\n              <PrivateRoute exact path='/add-experience' component={AddExperience} />\n              <PrivateRoute exact path='/add-education' component={AddEducation} />\n              <PrivateRoute exact path='/posts' component={Posts} />\n              <PrivateRoute exact path='/posts/:id' component={Post} />\n            </Switch>\n          </section>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}